// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/josedejesusAmaya/golang-bootcamp-2020/mocks/service (interfaces: APIService)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	errs "github.com/josedejesusAmaya/golang-bootcamp-2020/errs"
)

// MockAPIService is a mock of APIService interface
type MockAPIService struct {
	ctrl     *gomock.Controller
	recorder *MockAPIServiceMockRecorder
}

// MockAPIServiceMockRecorder is the mock recorder for MockAPIService
type MockAPIServiceMockRecorder struct {
	mock *MockAPIService
}

// NewMockAPIService creates a new mock instance
func NewMockAPIService(ctrl *gomock.Controller) *MockAPIService {
	mock := &MockAPIService{ctrl: ctrl}
	mock.recorder = &MockAPIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPIService) EXPECT() *MockAPIServiceMockRecorder {
	return m.recorder
}

// WriteCSV mocks base method
func (m *MockAPIService) WriteCSV() (string, *errs.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteCSV")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*errs.Error)
	return ret0, ret1
}

// WriteCSV indicates an expected call of WriteCSV
func (mr *MockAPIServiceMockRecorder) WriteCSV() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteCSV", reflect.TypeOf((*MockAPIService)(nil).WriteCSV))
}
